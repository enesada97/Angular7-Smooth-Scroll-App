{"version":3,"sources":["./src/app/components/dummy-content/dummy-content.component.ts","./src/app/components/dummy-content/dummy-content.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/dummy-card/dummy-card.component.ts","./src/app/components/dummy-card/dummy-card.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-dummy-content',\n  templateUrl: './dummy-content.component.html',\n})\nexport class DummyContentComponent implements OnChanges {\n\n  @Input() length = 1;\n\n  public array = [0];\n\n  constructor() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.array = Array.from(Array(this.length), (e, i) => i);\n  }\n\n}\n","<p *ngFor=\"let num of array\">\n    Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum\n    tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas\n    semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien\n    ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi.\n    Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac\n    dui. Donec non enim in turpis pulvinar facilisis. Ut felis. Praesent dapibus, neque id cursus faucibus,\n    tortor neque egestas augue, eu vulputate magna eros eu erat. Aliquam erat volutpat. Nam dui mi,\n    tincidunt quis, accumsan porttitor, facilisis luctus, metus\n  </p>\n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { EasingLogic, PageScrollService } from 'ngx-page-scroll-core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  providers: [MatSnackBar],\n})\nexport class HomeComponent implements OnInit {\n\n  public dynamicTargets = ['#head7', '#head10', '#head14'];\n  public dynamicSelectedTarget = this.dynamicTargets[0];\n\n  public myEasing: EasingLogic = (t: number, b: number, c: number, d: number): number => {\n    // easeInOutExpo easing\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    // tslint:disable-next-line:no-conditional-assignment\n    if ((t /= d / 2) < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  public constructor(@Inject(DOCUMENT) private document: any,\n                     private pageScrollService: PageScrollService,\n                     private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  public goToLastHeading(): void {\n    // You may use any valid css selector as scroll target (e.g. ids, class selectors, tags, combinations of those, ...)\n    // const pageScrollInstance: PageScrollInstance = PageScrollInstance.simpleInstance(this.document, '.theEnd');\n    const subscriber = new EventEmitter<boolean>();\n    subscriber.subscribe((val) => {\n      // Reached last heading\n    });\n    this.pageScrollService.scroll({\n      document: this.document,\n      scrollTarget: '.theEnd',\n      scrollFinishListener: subscriber,\n    });\n  }\n\n  public doSmth(reachedTarget: boolean): void {\n    let text: string;\n    if (reachedTarget) {\n      text = 'Yeah, we reached our destination';\n    } else {\n      text = 'Ohoh, something interrupted us';\n    }\n    this.snackBar.open(text, 'Ok');\n  }\n\n}\n","<mat-card>\n    <mat-card-title id=\"head1\">Simple Scrolling</mat-card-title>\n    <p>\n      On this page you may find some basic scroll operations using the directive and using the service.\n    </p>\n  </mat-card>\n  \n  <!-- Buttons -->\n  <mat-card>\n    <h3>Scrolling when in view</h3>\n    <p>These buttons demonstrate the \"scrollInView\" option. If set to false, scrolling does not happen if the target\n      scroll position is already inside the current browser view.</p>\n    <button mat-raised-button color=\"primary\" href=\"#head1\" pageScroll id=\"testScrollInView1\">\n      Scroll to Heading 1\n    </button>\n    <button mat-raised-button color=\"primary\" href=\"#head1\" pageScroll [pageScrollInView]=\"false\" id=\"testScrollInView2\">\n      Scroll to Heading 1 when not in view\n    </button>\n  \n    <h3>Non-Interruptible, custom duration</h3>\n    <p>This button has a custom animation duration of 4 seconds and is specified to be non-interrupbtible. Try scrolling\n      or using the arrow keys while the scroll animation takes place.</p>\n    <button mat-raised-button color=\"primary\" href=\"#head5\" pageScroll [pageScrollInterruptible]=\"false\"\n            [pageScrollDuration]=\"4000\" id=\"testButton\">\n      Start for Heading 5\n    </button>\n    <button mat-raised-button color=\"primary\" href=\"#head11\" pageScroll [pageScrollInterruptible]=\"false\"\n            [pageScrollDuration]=\"4000\" id=\"testButton2\">\n      Start for Heading 11\n    </button>\n  \n    <h3>Speed option</h3>\n    <p>As an alternative to specifying the exact duration you may set the <code>pageScrollSpeed</code> attribute to\n      specify the speed in \"pixel/second\". This results in animations to take place at the same speed, no matter how far\n      to scroll.</p>\n    <button mat-raised-button color=\"primary\" href=\"#head5\" pageScroll [pageScrollSpeed]=\"800\" id=\"speedButton1\">\n      Start for Heading 5\n    </button>\n    <button mat-raised-button color=\"primary\" href=\"#head11\" pageScroll [pageScrollSpeed]=\"800\" id=\"speedButton2\">\n      Start for Heading 11\n    </button>\n  \n    <h3>Target Offset</h3>\n    <p>These two buttons trigger a scroll animation with a custom offset to the target. One will stop 150px atop the\n      target, the second one 50px below the target.</p>\n    <button mat-raised-button color=\"primary\" href=\"#head7\" pageScroll [pageScrollOffset]=\"150\" id=\"offsetButton\">\n      Offset 150px\n    </button>\n    <button mat-raised-button color=\"primary\" href=\"#head7\" pageScroll [pageScrollOffset]=\"-50\"\n            id=\"negativeOffsetButton\">\n      Offset -50px\n    </button>\n  \n    <h3>Finish event</h3>\n    <p>The following scroll animation has a custom duration of 350ms and a <code>pageScrollFinish</code> event listener\n      attached and shows a snackbar\n      at the bottom of the page when the event fires.</p>\n    <button mat-raised-button color=\"primary\" href=\"#head7\" pageScroll (pageScrollFinish)=\"doSmth($event)\"\n            [pageScrollDuration]=\"350\" id=\"finishEventButton\">\n      Start\n    </button>\n  \n    <h3>Hash/Fragment adjustment</h3>\n    <p>The following scroll animation adjusts the url to contain the hash of the target element once it reached the\n      target. This further allows pressing the browser's back button to jump back to the top of the page.</p>\n    <button mat-raised-button color=\"primary\" href=\"#head7\" pageScroll [pageScrollAdjustHash]=\"true\"\n            id=\"hashAdjustmentButton\">\n      Start\n    </button>\n  \n    <h3>Custom easing</h3>\n    <p>You may specify a custom easing function to manipulate the scroll position over time. This example uses an <i>easeInOutExpo</i>\n      function.</p>\n    <button mat-raised-button color=\"primary\" href=\"#head7\" pageScroll [pageScrollEasing]=\"myEasing\"\n            id=\"customEasingButton\">\n      Start\n    </button>\n    <button mat-raised-button color=\"primary\" href=\"#head7\" pageScroll [pageScrollDuration]=\"5000\"\n            [pageScrollEasing]=\"myEasing\">\n      Start slow version\n    </button>\n  \n    <h3>Dynamic target</h3>\n    <p>The following button showcases dynamically changing the scroll targets.</p>\n    <p>\n      <button mat-raised-button color=\"primary\" [href]=\"dynamicSelectedTarget\" pageScroll id=\"dynamicTargetButton\">\n        Start\n      </button>\n      <mat-form-field>\n        <mat-select placeholder=\"Button Scroll Target\" [(ngModel)]=\"dynamicSelectedTarget\" id=\"dynamicTargetSelect\">\n          <mat-option *ngFor=\"let dynamicTarget of dynamicTargets\" [value]=\"dynamicTarget\">\n            {{ dynamicTarget }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </p>\n  \n    <h3>Scrolling using <i>PageScrollService</i></h3>\n    <p>You may use the <i>PageScrollService</i> to create highly customized scroll animations. This example will scroll\n      to the end of the page, which is identified by a div-element with css-class <code>theEnd</code>.</p>\n    <button (click)=\"goToLastHeading()\" mat-raised-button color=\"primary\" id=\"goToLastHeadingButton\">\n      Go to last heading (done via service)\n    </button>\n  \n  </mat-card>\n  \n  <app-dummy-card [start]=\"2\" [length]=\"14\"></app-dummy-card>\n  \n  <mat-card>\n    <h3>Up-scrolling examples</h3>\n    <p>These buttons perform similar scroll animations like the ones used above, but the scroll direction is now upwards\n      (as the target is atop of the button) instead of downwards like from the buttons are the beginning of the page.</p>\n  \n    <button mat-raised-button color=\"primary\" href=\"#head1\" pageScroll [pageScrollSpeed]=\"800\" id=\"toTopWithSpeed\">\n      To top with speed option\n    </button>\n    <button mat-raised-button color=\"primary\" href=\"#head1\" pageScroll [pageScrollOffset]=\"-50\"\n            id=\"toTopWithNegativeOffset\">\n      To top with offset -50px\n    </button>\n  </mat-card>\n  \n  <div class=\"theEnd\"></div>\n  ","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-dummy-card',\n  templateUrl: './dummy-card.component.html',\n})\nexport class DummyCardComponent implements OnChanges {\n\n  @Input() start: number;\n  @Input() length: number;\n  @Input() idPrefix = 'head';\n  @Input() headings = true;\n  @Input() scrollButtons = true;\n\n  public array: number[] = [];\n\n  constructor() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.array = Array.from(Array(this.length), (e, i) => i + this.start);\n  }\n\n}\n","<mat-card *ngFor=\"let num of array; let isLast = last\">\n    <mat-card-title id=\"{{ idPrefix + num }}\" *ngIf=\"headings\">Prioris generis {{ num }}</mat-card-title>\n    <mat-card-content>\n      <app-dummy-content></app-dummy-content>\n    </mat-card-content>\n    <mat-card-actions *ngIf=\"scrollButtons && headings\">\n      <a href=\"#{{ idPrefix + (num - 1) }}\" mat-button pageScroll>Go to previous</a>\n      <a *ngIf=\"!isLast\" href=\"#{{ idPrefix + (num + 1) }}\" pageScroll mat-button>Go to next</a>\n    </mat-card-actions>\n  </mat-card>\n  ","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { PageScrollService } from 'ngx-page-scroll-core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'reqP';\n  public currentTabIndex = 0;\n  public links = [\n    {\n      route: ['/'],\n      name: 'Home',\n    }];\n    constructor(private router: Router, private pageScrollService: PageScrollService) {\n      router.events.subscribe((event) => {\n        // see also\n        if (event instanceof NavigationEnd) {\n          this.links.forEach((link, index) => {\n            if (router.isActive(router.createUrlTree(link.route), false)) {\n              this.currentTabIndex = index;\n            }\n          });\n        }\n      });\n    }\n  \n    public tabChange(event: any): void {\n      // Select the correct route for that tab\n      const routeObj = this.links[event.index];\n      if (routeObj && routeObj.route) {\n        this.router.navigate(routeObj.route);\n      }\n    }\n  }\n  \n","<div class=\"app-content\" id=\"top\">\n\n  <mat-toolbar>\n    <span>ngx-page-scroll demo application</span>\n  </mat-toolbar>\n\n  <mat-tab-group (selectedTabChange)=\"tabChange($event)\" [selectedIndex]=\"currentTabIndex\">\n    <mat-tab *ngFor=\"let link of links\" label=\"{{ link.name }}\"></mat-tab>\n  </mat-tab-group>\n\n  <!-- Routed views go here -->\n  <router-outlet></router-outlet>\n\n  <footer>\n    <p><a href=\"#top\" pageScroll>Go to Top</a></p>\n  </footer>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NgxPageScrollModule } from 'ngx-page-scroll';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DummyCardComponent } from './components/dummy-card/dummy-card.component';\nimport { DummyContentComponent } from './components/dummy-content/dummy-content.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    DummyCardComponent,\n    DummyContentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatCardModule,\n    NgxPageScrollModule,\n    MatChipsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSelectModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', component: HomeComponent},\n  {path: '**', redirectTo: '/'},\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}